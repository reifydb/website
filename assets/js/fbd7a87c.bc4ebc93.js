"use strict";(self.webpackChunkreifydb_docs=self.webpackChunkreifydb_docs||[]).push([[1361],{2244:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var i=t(9729);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}},3345:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"getting-started/quickstart","title":"Quick Start","description":"Get up and running with ReifyDB in 5 minutes.","source":"@site/docs/getting-started/quickstart.md","sourceDirName":"getting-started","slug":"/getting-started/quickstart","permalink":"/docs/getting-started/quickstart","draft":false,"unlisted":false,"editUrl":"https://github.com/reifydb/reifydb/tree/main/docs/docs/getting-started/quickstart.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/docs/getting-started/installation"},"next":{"title":"Interactive Queries","permalink":"/docs/getting-started/interactive-queries"}}');var s=t(5813),r=t(2244);const a={sidebar_position:2},c="Quick Start",l={},d=[{value:"Start the Database",id:"start-the-database",level:2},{value:"Connect to ReifyDB",id:"connect-to-reifydb",level:2},{value:"Using the CLI",id:"using-the-cli",level:3},{value:"Using Rust Client",id:"using-rust-client",level:3},{value:"Using TypeScript Client",id:"using-typescript-client",level:3},{value:"Next Steps",id:"next-steps",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"quick-start",children:"Quick Start"})}),"\n",(0,s.jsx)(n.p,{children:"Get up and running with ReifyDB in 5 minutes."}),"\n",(0,s.jsx)(n.h2,{id:"start-the-database",children:"Start the Database"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"reifydb start\n"})}),"\n",(0,s.jsx)(n.h2,{id:"connect-to-reifydb",children:"Connect to ReifyDB"}),"\n",(0,s.jsx)(n.h3,{id:"using-the-cli",children:"Using the CLI"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"reifydb connect\n"})}),"\n",(0,s.jsx)(n.h3,{id:"using-rust-client",children:"Using Rust Client"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use reifydb::Client;\n\n#[tokio::main]\nasync fn main() {\n    let client = Client::connect("reifydb://localhost:5432").await?;\n\n    // Create a table\n    client.execute("\n        CREATE TABLE users (\n            id INTEGER PRIMARY KEY,\n            name TEXT NOT NULL,\n            email TEXT UNIQUE\n        )\n    ").await?;\n\n    // Insert data\n    client.execute("\n        INSERT INTO users (name, email)\n        VALUES (\'Alice\', \'alice@example.com\')\n    ").await?;\n\n    // Query data\n    let rows = client.query("SELECT * FROM users").await?;\n    for row in rows {\n        println!("{:?}", row);\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"using-typescript-client",children:"Using TypeScript Client"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { ReifyDB } from '@reifydb/client';\n\nconst db = new ReifyDB('reifydb://localhost:5432');\n\n// Create a table\nawait db.execute(`\n  CREATE TABLE users (\n    id INTEGER PRIMARY KEY,\n    name TEXT NOT NULL,\n    email TEXT UNIQUE\n  )\n`);\n\n// Insert data\nawait db.execute(`\n  INSERT INTO users (name, email) \n  VALUES ('Alice', 'alice@example.com')\n`);\n\n// Query data\nconst users = await db.query('SELECT * FROM users');\nconsole.log(users);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/core-concepts/architecture",children:"Learn about Core Concepts"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/api",children:"Explore the API Reference"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/playground",children:"Try the Interactive Playground"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}}}]);